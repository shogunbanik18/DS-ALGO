#include <bits/stdc++.h>
using namespace std;

class Node
{
public:
    int key;
    Node *left;
    Node *right;

    Node(int key)
    {
        this->key = key;
        left = right = NULL;
    }
};

// insertion in bst
Node *insert(Node *root, int key)
{
    // Base case
    if (root == NULL)
    {
        return new Node(key);
    }

    // recursive case

    if (key < root->key)
    {
        insert(root->left, key);
    }
    else
    {
        insert(root->right, key);
    }
    return root;
}

bool search(Node *root, int key)
{
    // base case
    if (root == NULL)
    {
        return false;
    }

    // recursive case
    if (key < root->key)
    {
        search(root->left, key);
    }
    else
    {
        search(root->right, key);
    }
    return true;
}

int main()
{
    Node *root = NULL;
    int arr[] = {8, 3, 10, 1, 6, 14, 4, 7, 13};
    for (int x : arr)
    {
        root = insert(root, x);
    }
    int key;
    cin >> key;
    cout << search(root, key) << endl;
}
