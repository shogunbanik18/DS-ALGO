#include <bits/stdc++.h>
using namespace std;

class Node
{
public:
    int data;
    Node *left;
    Node *right;

    Node(int val)
    {
        this->data = val;
        this->left = NULL;
        this->right = NULL;
    }
};

// flattering bst to linked list
void flattern(Node *root)
{
    // base case
    if (root == NULL or ((root->left == NULL and root->right == NULL)))
    {
        return;
    }

    if (root->left != NULL)
    {
        flattern(root->left);

        Node *temp = root->right;
        root->right = root->left;
        root->left = NULL;

        Node *t = root->right;
        while (t->right != NULL)
        {
            t = t->right;
        }
        t->right = temp;
    }
    flattern(root->right);
}

void inorderprint(Node *root)
{
    if (root == NULL)
    {
        return;
    }

    inorderprint(root->left);
    cout << root->data << " ";
    inorderprint(root->right);
}

int main()
{
    Node *root = new Node(4);
    root->left = new Node(9);
    root->right = new Node(5);
    root->left->left = new Node(1);
    root->left->right = new Node(3);
    root->right->right = new Node(6);

    // binary tree
    // 4
    // 9       5
    // 1       3        6

    // cout << "hi" << endl;
    flattern(root);
    inorderprint(root);
    cout << endl;
    return 0;
}
