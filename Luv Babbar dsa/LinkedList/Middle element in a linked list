/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    //using count approach //
//     ListNode* middleNode(ListNode* head) 
//     {
//         ListNode*curr=head;
//         int count=0;
//         while(curr!=NULL)
//         {
//             count++;
//             curr=curr->next;
//         }
        
//         int mid=count/2;
        
//         ListNode*curr2=head;
//         for(int i=1;i<=mid;i++)
//         {
//             curr2=curr2->next;
//         }
//         return curr2;
//     }
    
    // using hare and tortoise approach //
    ListNode* middleNode(ListNode* head)
    {
        ListNode*slow=head;
        ListNode*fast=head;
        while(fast!=NULL and fast->next!=NULL)
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow;
    }
};
