class Solution{
    public:
    // arr : given array
    // l : starting index of the array i.e 0
    // r : ending index of the array i.e size-1
    // k : find kth smallest element and return using this function
    
    // int kthSmallest(int arr[], int l, int r, int k) 
    // {
    //     sort(arr,arr+l+r+1);
    //     while(l<=r)
    //     {
    //         return arr[k-1];
    //     }
    //     //code here
    // }
    
    // using priority queue ds 
    int kthSmallest(int arr[], int l, int r, int k) 
    {
        // int n=sizeof(arr)/sizeof(int);
        priority_queue<int>ds;
        for(int i=l;i<=r;i++)
        {
            ds.push(arr[i]);
        
            if(ds.size()>k)
            {
                ds.pop();
            }
        }
        return ds.top();
    }
};
